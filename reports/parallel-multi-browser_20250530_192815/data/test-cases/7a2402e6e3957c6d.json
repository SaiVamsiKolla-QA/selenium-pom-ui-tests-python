{"uid":"7a2402e6e3957c6d","name":"test_swag_login[standard_user-secret_sauce]","fullName":"Tests.test_swag_login#test_swag_login","historyId":"d4cf0782aadf59b185055ee41b082cb1","time":{"start":1748654868708,"stop":1748654890117,"duration":21409},"description":"Test login functionality and verify the product page with screenshot attachments.","descriptionHtml":"<p>Test login functionality and verify the product page with screenshot attachments.</p>\n","status":"failed","statusMessage":"AssertionError: Login failed for standard_user\nassert False","statusTrace":"driver = <selenium.webdriver.safari.webdriver.WebDriver (session=\"FC05B8ED-DEE8-43D9-809C-3D956458B451\")>\nusername = 'standard_user', password = 'secret_sauce'\nbase_url = 'https://www.saucedemo.com/'\n\n    @pytest.mark.parametrize(\"username,password\", [\n        (\"standard_user\", \"secret_sauce\"),\n    ])\n    @allure.epic(\"Swag Labs E-commerce\")\n    @allure.feature(\"Swag Login Feature\")\n    def test_swag_login(driver, username, password, base_url):\n        \"\"\"Test login functionality and verify the product page with screenshot attachments.\"\"\"\n        allure.dynamic.story(f\"User {username} logs in\")\n        login_page = LoginPage(driver)\n        product_page = ProductPage(driver)\n    \n        # Step 1: Perform login\n        with allure.step(f\"Login as {username}\"):\n            login_page.login_as(username, password, url=base_url)\n    \n        # Step 2: Verify login and capture screenshot regardless of user type\n        with allure.step(\"Verify login outcome and attach screenshot\"):\n            is_product_page_loaded = product_page.is_product_page_loaded()\n            screenshot_name = f\"Step_01_Login_{username}\"\n    \n            # Always capture a screenshot.\n            screenshot = Utility.capture_screenshot(driver, screenshot_name)\n            allure.attach(\n                screenshot,\n                name=screenshot_name,\n                attachment_type=allure.attachment_type.PNG\n            )\n    \n            if username == \"locked_out_user\":\n                # For a locked out user, we expect the product page NOT to be loaded.\n                assert not is_product_page_loaded, f\"Login should have failed for {username}\"\n            else:\n                # For other users, we expect the product page to load.\n>               assert is_product_page_loaded, f\"Login failed for {username}\"\nE               AssertionError: Login failed for standard_user\nE               assert False\n\nTests/test_swag_login.py:42: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1748654867792,"stop":1748654868707,"duration":915},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"browser_name","time":{"start":1748654867792,"stop":1748654867792,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"base_url","time":{"start":1748654868708,"stop":1748654868708,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"description":"Test login functionality and verify the product page with screenshot attachments.","status":"failed","statusMessage":"AssertionError: Login failed for standard_user\nassert False","statusTrace":"driver = <selenium.webdriver.safari.webdriver.WebDriver (session=\"FC05B8ED-DEE8-43D9-809C-3D956458B451\")>\nusername = 'standard_user', password = 'secret_sauce'\nbase_url = 'https://www.saucedemo.com/'\n\n    @pytest.mark.parametrize(\"username,password\", [\n        (\"standard_user\", \"secret_sauce\"),\n    ])\n    @allure.epic(\"Swag Labs E-commerce\")\n    @allure.feature(\"Swag Login Feature\")\n    def test_swag_login(driver, username, password, base_url):\n        \"\"\"Test login functionality and verify the product page with screenshot attachments.\"\"\"\n        allure.dynamic.story(f\"User {username} logs in\")\n        login_page = LoginPage(driver)\n        product_page = ProductPage(driver)\n    \n        # Step 1: Perform login\n        with allure.step(f\"Login as {username}\"):\n            login_page.login_as(username, password, url=base_url)\n    \n        # Step 2: Verify login and capture screenshot regardless of user type\n        with allure.step(\"Verify login outcome and attach screenshot\"):\n            is_product_page_loaded = product_page.is_product_page_loaded()\n            screenshot_name = f\"Step_01_Login_{username}\"\n    \n            # Always capture a screenshot.\n            screenshot = Utility.capture_screenshot(driver, screenshot_name)\n            allure.attach(\n                screenshot,\n                name=screenshot_name,\n                attachment_type=allure.attachment_type.PNG\n            )\n    \n            if username == \"locked_out_user\":\n                # For a locked out user, we expect the product page NOT to be loaded.\n                assert not is_product_page_loaded, f\"Login should have failed for {username}\"\n            else:\n                # For other users, we expect the product page to load.\n>               assert is_product_page_loaded, f\"Login failed for {username}\"\nE               AssertionError: Login failed for standard_user\nE               assert False\n\nTests/test_swag_login.py:42: AssertionError","steps":[{"name":"Login as standard_user","time":{"start":1748654868709,"stop":1748654869444,"duration":735},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"Verify login outcome and attach screenshot","time":{"start":1748654869444,"stop":1748654890115,"duration":20671},"status":"failed","statusMessage":"AssertionError: Login failed for standard_user\nassert False\n","statusTrace":"  File \"/Users/vamsikolla/Desktop/Projects/Demos/selenium-pom-ui-tests-python/Tests/test_swag_login.py\", line 42, in test_swag_login\n    assert is_product_page_loaded, f\"Login failed for {username}\"\n","steps":[],"attachments":[{"uid":"5407e6f85c564a0a","name":"Step_01_Login_standard_user","source":"5407e6f85c564a0a.png","type":"image/png","size":184631}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false}],"attachments":[{"uid":"8a7deb574873e2bc","name":"stdout","source":"8a7deb574873e2bc.txt","type":"text/plain","size":169}],"parameters":[],"stepsCount":2,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1748654890145,"stop":1748654890375,"duration":230},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"labels":[{"name":"story","value":"User standard_user logs in"},{"name":"feature","value":"Swag Login Feature"},{"name":"epic","value":"Swag Labs E-commerce"},{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_swag_login"},{"name":"host","value":"Vamsis-MacBook-Air.local"},{"name":"thread","value":"12706-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_swag_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"password","value":"'secret_sauce'"},{"name":"username","value":"'standard_user'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"7a2402e6e3957c6d.json","parameterValues":["'secret_sauce'","'standard_user'"]}