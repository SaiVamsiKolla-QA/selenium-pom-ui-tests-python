{"uid":"83827e68bca270b9","name":"test_swag_login[visual_user-secet_sauce]","fullName":"Tests.test_swag_login#test_swag_login","historyId":"ab8716a76a1c25a2c25d72cfd041bad0","time":{"start":1748658463796,"stop":1748658475784,"duration":11988},"description":"Test login functionality and verify the product page with screenshot attachments.","descriptionHtml":"<p>Test login functionality and verify the product page with screenshot attachments.</p>\n","status":"failed","statusMessage":"AssertionError: Login failed for visual_user\nassert False","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"64a19d5e4e1d77d669a041983850e85c\")>\nusername = 'visual_user', password = 'secet_sauce'\nbase_url = 'https://www.saucedemo.com/'\n\n    @pytest.mark.parametrize(\"username,password\", [\n        (\"standard_user\", \"secret_sauce\"),(\"visual_user\", \"secet_sauce\")\n    ])\n    @allure.epic(\"Swag Labs E-commerce\")\n    @allure.feature(\"Swag Login Feature\")\n    def test_swag_login(driver, username, password, base_url):\n        \"\"\"Test login functionality and verify the product page with screenshot attachments.\"\"\"\n        allure.dynamic.story(f\"User {username} logs in\")\n        login_page = LoginPage(driver)\n        product_page = ProductPage(driver)\n    \n        # Step 1: Perform login\n        with allure.step(f\"Login as {username}\"):\n            login_page.login_as(username, password, url=base_url)\n    \n        # Step 2: Verify login and capture screenshot regardless of user type\n        with allure.step(\"Verify login outcome and attach screenshot\"):\n            is_product_page_loaded = product_page.is_product_page_loaded()\n            screenshot_name = f\"Step_01_Login_{username}\"\n    \n            # Always capture a screenshot.\n            screenshot = Utility.capture_screenshot(driver, screenshot_name)\n            allure.attach(\n                screenshot,\n                name=screenshot_name,\n                attachment_type=allure.attachment_type.PNG\n            )\n    \n            if username == \"locked_out_user\":\n                # For a locked out user, we expect the product page NOT to be loaded.\n                assert not is_product_page_loaded, f\"Login should have failed for {username}\"\n            else:\n                # For other users, we expect the product page to load.\n>               assert is_product_page_loaded, f\"Login failed for {username}\"\nE               AssertionError: Login failed for visual_user\nE               assert False\n\nTests/test_swag_login.py:42: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser_name","time":{"start":1748658462539,"stop":1748658462539,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"driver","time":{"start":1748658462539,"stop":1748658463788,"duration":1249},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"base_url","time":{"start":1748658463789,"stop":1748658463789,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"description":"Test login functionality and verify the product page with screenshot attachments.","status":"failed","statusMessage":"AssertionError: Login failed for visual_user\nassert False","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"64a19d5e4e1d77d669a041983850e85c\")>\nusername = 'visual_user', password = 'secet_sauce'\nbase_url = 'https://www.saucedemo.com/'\n\n    @pytest.mark.parametrize(\"username,password\", [\n        (\"standard_user\", \"secret_sauce\"),(\"visual_user\", \"secet_sauce\")\n    ])\n    @allure.epic(\"Swag Labs E-commerce\")\n    @allure.feature(\"Swag Login Feature\")\n    def test_swag_login(driver, username, password, base_url):\n        \"\"\"Test login functionality and verify the product page with screenshot attachments.\"\"\"\n        allure.dynamic.story(f\"User {username} logs in\")\n        login_page = LoginPage(driver)\n        product_page = ProductPage(driver)\n    \n        # Step 1: Perform login\n        with allure.step(f\"Login as {username}\"):\n            login_page.login_as(username, password, url=base_url)\n    \n        # Step 2: Verify login and capture screenshot regardless of user type\n        with allure.step(\"Verify login outcome and attach screenshot\"):\n            is_product_page_loaded = product_page.is_product_page_loaded()\n            screenshot_name = f\"Step_01_Login_{username}\"\n    \n            # Always capture a screenshot.\n            screenshot = Utility.capture_screenshot(driver, screenshot_name)\n            allure.attach(\n                screenshot,\n                name=screenshot_name,\n                attachment_type=allure.attachment_type.PNG\n            )\n    \n            if username == \"locked_out_user\":\n                # For a locked out user, we expect the product page NOT to be loaded.\n                assert not is_product_page_loaded, f\"Login should have failed for {username}\"\n            else:\n                # For other users, we expect the product page to load.\n>               assert is_product_page_loaded, f\"Login failed for {username}\"\nE               AssertionError: Login failed for visual_user\nE               assert False\n\nTests/test_swag_login.py:42: AssertionError","steps":[{"name":"Login as visual_user","time":{"start":1748658463796,"stop":1748658465470,"duration":1674},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false},{"name":"Verify login outcome and attach screenshot","time":{"start":1748658465470,"stop":1748658475784,"duration":10314},"status":"failed","statusMessage":"AssertionError: Login failed for visual_user\nassert False\n","statusTrace":"  File \"/Users/vamsikolla/Desktop/Projects/Demos/selenium-pom-ui-tests-python/Tests/test_swag_login.py\", line 42, in test_swag_login\n    assert is_product_page_loaded, f\"Login failed for {username}\"\n","steps":[],"attachments":[{"uid":"ee1c83f7c531f963","name":"Step_01_Login_visual_user","source":"ee1c83f7c531f963.png","type":"image/png","size":99696}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false}],"attachments":[{"uid":"7afd8a0ded784ba3","name":"stdout","source":"7afd8a0ded784ba3.txt","type":"text/plain","size":167}],"parameters":[],"stepsCount":2,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":2,"attachmentStep":false},"afterStages":[{"name":"driver::0","time":{"start":1748658475798,"stop":1748658475878,"duration":80},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false}],"labels":[{"name":"story","value":"User visual_user logs in"},{"name":"feature","value":"Swag Login Feature"},{"name":"epic","value":"Swag Labs E-commerce"},{"name":"parentSuite","value":"Tests"},{"name":"suite","value":"test_swag_login"},{"name":"host","value":"Vamsis-MacBook-Air.local"},{"name":"thread","value":"39745-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Tests.test_swag_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"password","value":"'secet_sauce'"},{"name":"username","value":"'visual_user'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"83827e68bca270b9.json","parameterValues":["'secet_sauce'","'visual_user'"]}