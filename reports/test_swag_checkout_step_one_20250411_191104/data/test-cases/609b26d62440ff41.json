{"uid":"609b26d62440ff41","name":"test_swag_login[locked_out_user-secret_sauce]","fullName":"tests.test_login#test_swag_login","historyId":"d0b682f9d51b842956c682b9e0fed20a","time":{"start":1744361674085,"stop":1744361684644,"duration":10559},"description":"Test login functionality and verify the product page.","descriptionHtml":"<p>Test login functionality and verify the product page.</p>\n","status":"failed","statusMessage":"AssertionError: Login failed for locked_out_user\nassert False","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0610d8a0fd8802247c3508067a7509e\")>, username = 'locked_out_user', password = 'secret_sauce'\n\n    @pytest.mark.parametrize(\"username,password\", [\n        (\"standard_user\", \"secret_sauce\"),\n        (\"locked_out_user\", \"secret_sauce\"),\n        (\"problem_user\", \"secret_sauce\"),\n        (\" performance_glitch_user\", \"secret_sauce\"),\n        (\"error_user\", \"secret_sauce\"),\n        (\"visual_user\", \"secret_sauce\"),\n    ])\n    @allure.epic(\"Swag Labs E-commerce\")\n    @allure.feature('Swag Login Feature')\n    def test_swag_login(driver, username, password):\n        \"\"\"Test login functionality and verify the product page.\"\"\"\n        allure.dynamic.story(f\"User {username} logs in\")\n    \n        login_page = LoginPage(driver)\n        product_page = ProductPage(driver)\n    \n        # -------------------------------\n        # Step 1: Perform Login using provided credentials.\n        # -------------------------------\n        with allure.step(f\"Login as {username}\"):\n            login_page.login_as(username, password, url=\"https://www.saucedemo.com/\")\n    \n        # -------------------------------\n        # Step 2: Verify login was successful by checking product page\n        # -------------------------------\n        with allure.step(\"Verify successful login\"):\n            is_product_page_loaded = product_page.is_product_page_loaded()\n    \n            # Take screenshot only if login was successful (we're on the product page)\n            if is_product_page_loaded:\n                print(f\"Step_01_{username} logged in successfully\")\n                screenshot_name = f\"Step_01_Login_Successful_{username}\"\n                screenshot = Utility.capture_screenshot(driver, screenshot_name)\n                allure.attach(screenshot,\n                              name=screenshot_name,\n                              attachment_type=allure.attachment_type.PNG)\n    \n            # Assert that login was successful\n>           assert is_product_page_loaded, f\"Login failed for {username}\"\nE           AssertionError: Login failed for locked_out_user\nE           assert False\n\ntests/test_login.py:77: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1744361673069,"stop":1744361674084,"duration":1015},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"testStage":{"description":"Test login functionality and verify the product page.","status":"failed","statusMessage":"AssertionError: Login failed for locked_out_user\nassert False","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e0610d8a0fd8802247c3508067a7509e\")>, username = 'locked_out_user', password = 'secret_sauce'\n\n    @pytest.mark.parametrize(\"username,password\", [\n        (\"standard_user\", \"secret_sauce\"),\n        (\"locked_out_user\", \"secret_sauce\"),\n        (\"problem_user\", \"secret_sauce\"),\n        (\" performance_glitch_user\", \"secret_sauce\"),\n        (\"error_user\", \"secret_sauce\"),\n        (\"visual_user\", \"secret_sauce\"),\n    ])\n    @allure.epic(\"Swag Labs E-commerce\")\n    @allure.feature('Swag Login Feature')\n    def test_swag_login(driver, username, password):\n        \"\"\"Test login functionality and verify the product page.\"\"\"\n        allure.dynamic.story(f\"User {username} logs in\")\n    \n        login_page = LoginPage(driver)\n        product_page = ProductPage(driver)\n    \n        # -------------------------------\n        # Step 1: Perform Login using provided credentials.\n        # -------------------------------\n        with allure.step(f\"Login as {username}\"):\n            login_page.login_as(username, password, url=\"https://www.saucedemo.com/\")\n    \n        # -------------------------------\n        # Step 2: Verify login was successful by checking product page\n        # -------------------------------\n        with allure.step(\"Verify successful login\"):\n            is_product_page_loaded = product_page.is_product_page_loaded()\n    \n            # Take screenshot only if login was successful (we're on the product page)\n            if is_product_page_loaded:\n                print(f\"Step_01_{username} logged in successfully\")\n                screenshot_name = f\"Step_01_Login_Successful_{username}\"\n                screenshot = Utility.capture_screenshot(driver, screenshot_name)\n                allure.attach(screenshot,\n                              name=screenshot_name,\n                              attachment_type=allure.attachment_type.PNG)\n    \n            # Assert that login was successful\n>           assert is_product_page_loaded, f\"Login failed for {username}\"\nE           AssertionError: Login failed for locked_out_user\nE           assert False\n\ntests/test_login.py:77: AssertionError","steps":[{"name":"Login as locked_out_user","time":{"start":1744361674085,"stop":1744361674606,"duration":521},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"Verify successful login","time":{"start":1744361674606,"stop":1744361684642,"duration":10036},"status":"failed","statusMessage":"AssertionError: Login failed for locked_out_user\nassert False\n","statusTrace":"  File \"/Users/vamsikolla/SwagLabs-POM-E2E/tests/test_login.py\", line 77, in test_swag_login\n    assert is_product_page_loaded, f\"Login failed for {username}\"\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[{"uid":"7c342fa471b0aa70","name":"stdout","source":"7c342fa471b0aa70.txt","type":"text/plain","size":110}],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":1,"attachmentStep":false,"stepsCount":2,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1744361684649,"stop":1744361684770,"duration":121},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false}],"labels":[{"name":"story","value":"User locked_out_user logs in"},{"name":"feature","value":"Swag Login Feature"},{"name":"epic","value":"Swag Labs E-commerce"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"host","value":"Vamsis-MacBook-Air.local"},{"name":"thread","value":"12048-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"password","value":"'secret_sauce'"},{"name":"username","value":"'locked_out_user'"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"609b26d62440ff41.json","parameterValues":["'secret_sauce'","'locked_out_user'"]}