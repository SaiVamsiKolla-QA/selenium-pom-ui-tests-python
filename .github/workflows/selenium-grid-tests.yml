name: Selenium Grid Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    services:
      selenium-hub:
        image: selenium/hub:4.8.0-20230103
        ports:
          - 4444:4444
      node-chrome:
        image: selenium/node-chrome:4.8.0-20230103
        depends_on:
          - selenium-hub
        environment:
          SE_EVENT_BUS_HOST: selenium-hub
          SE_EVENT_BUS_PUBLISH_PORT: 4442
          SE_EVENT_BUS_SUBSCRIBE_PORT: 4443
      node-firefox:
        image: selenium/node-firefox:4.8.0-20230103
        depends_on:
          - selenium-hub
        environment:
          SE_EVENT_BUS_HOST: selenium-hub
          SE_EVENT_BUS_PUBLISH_PORT: 4442
          SE_EVENT_BUS_SUBSCRIBE_PORT: 4443
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f Requirements.txt ]; then pip install -r Requirements.txt; fi
        pip install selenium # Ensure selenium is installed even if not in Requirements.txt for now
    - name: Download and unzip Allure CLI
      run: |
        ALLURE_VERSION="2.27.0"
        wget -qO allure.zip               https://github.com/allure-framework/allure2/releases/download/${ALLURE_VERSION}/allure-${ALLURE_VERSION}.zip
        unzip -q allure.zip
        rm allure.zip
        echo "./allure-${ALLURE_VERSION}/bin" >> $GITHUB_PATH # Add allure to PATH
    - name: Wait for Selenium Grid
      run: |
        echo "Waiting for Selenium Grid to be ready..."
        timeout=120 # seconds
        interval=5  # seconds
        elapsed=0
        while true; do
          status_code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:4444/status)
          if [ "$status_code" -eq 200 ]; then
            ready_value=$(curl -s http://localhost:4444/status | jq -r .value.ready)
            if [ "$ready_value" = "true" ]; then
              echo "Selenium Grid is ready!"
              break
            fi
          fi
          elapsed=$((elapsed + interval))
          if [ "$elapsed" -ge "$timeout" ]; then
            echo "Timeout waiting for Selenium Grid."
            exit 1
          fi
          echo "Grid not ready, retrying in $interval seconds..."
          sleep $interval
        done
    - name: Make run_tests.sh executable
      run: chmod +x run_tests.sh
    - name: Run tests on Chrome
      env:
        SELENIUM_REMOTE_URL: http://localhost:4444/wd/hub
        BROWSER: chrome
      run: ./run_tests.sh --alluredir=allure-results/chrome
    - name: Run tests on Firefox
      env:
        SELENIUM_REMOTE_URL: http://localhost:4444/wd/hub
        BROWSER: firefox
      run: ./run_tests.sh --alluredir=allure-results/firefox
    - name: Generate Allure report for Chrome
      run: |
        allure generate allure-results/chrome --clean -o allure-report/chrome
      if: always() # Ensure this step runs even if tests fail
    - name: Generate Allure report for Firefox
      run: |
        allure generate allure-results/firefox --clean -o allure-report/firefox
      if: always() # Ensure this step runs even if tests fail
    - name: Create combined Allure report directory
      run: mkdir -p combined-allure
    - name: Move Chrome report to combined directory
      run: mv allure-report/chrome combined-allure/chrome
      if: always()
    - name: Move Firefox report to combined directory
      run: mv allure-report/firefox combined-allure/firefox
      if: always()
    - name: Upload Allure report as Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: combined-allure
      if: always()
    - name: Deploy to GitHub Pages
      id: deploy-pages
      uses: actions/deploy-pages@v4
      if: always()
    - name: Send email notification
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.SMTP_USERNAME }}
        password: ${{ secrets.SMTP_PASSWORD }}
        subject: '[CI] ${{ github.repository }} – Allure Report Published'
        to: saivamsikolla@gmail.com # Replace with your email or use a secret
        from: GitHub Actions CI <${{ secrets.SMTP_USERNAME }}> # Replace with your email or use a secret
        body: |
          Hello,

          Your Allure report for ${{ github.repository }} is now live:

          • View interactive report online:
            ${{ steps.deploy-pages.outputs.page_url }}

          Regards,
          GitHub Actions CI
      if: always()
