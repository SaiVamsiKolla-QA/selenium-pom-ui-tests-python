name: Swag Labs Test Automation

on:
  push:
    branches: [ "main" ]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Requirements.txt

      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg
          sudo wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Download Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/download/2.14.0/allure-2.14.0.zip
          unzip allure-2.14.0.zip

      - name: Run tests with Pytest
        run: |
          pytest --alluredir=./allure-results

      - name: Generate Allure report
        run: |
          ./allure-2.14.0/bin/allure generate ./allure-results --clean -o ./allure-report

      - name: Upload Allure report artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "./allure-report"   # Package the generated report for deployment

  deploy:
    needs: tests
    runs-on: ubuntu-latest
    permissions:
      pages: write        # allow deployment to GitHub Pages
      id-token: write     # allow OIDC authentication
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
